{"version":3,"sources":["hoc/withAuthRedirect.js","components/Dialogs/Dialog.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsConrainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","_React$Component","Object","C_Users_arcticmonkey_Desktop_social_network_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","C_Users_arcticmonkey_Desktop_social_network_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","C_Users_arcticmonkey_Desktop_social_network_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","apply","arguments","C_Users_arcticmonkey_Desktop_social_network_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","C_Users_arcticmonkey_Desktop_social_network_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","key","value","props","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","react_router_dom__WEBPACK_IMPORTED_MODULE_6__","to","React","connect","Dialog","react_default","className","src","avatar","alt","name","message","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","Dialogs","dialogsElements","dialogsPage","dialogs","map","d","components_Dialogs_Dialog","id","values","sendMessage","newMessageBody","react_router","compose","dispatch","sendMessageCreator"],"mappings":"sMAIIA,EAA6B,SAACC,GAAD,MAAY,CAC3CC,OAAQD,EAAME,KAAKD,SAGPE,EAAmB,SAACC,GAAc,IAExCC,EAFwC,SAAAC,GAAA,SAAAD,IAAA,OAAAE,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,GAAAE,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,MAAAH,KAAAI,YAAA,OAAAN,OAAAO,EAAA,EAAAP,CAAAF,EAAAC,GAAAC,OAAAQ,EAAA,EAAAR,CAAAF,EAAA,EAAAW,IAAA,SAAAC,MAAA,WAI1C,OAAKR,KAAKS,MAAMjB,OAETkB,EAAAC,EAAAC,cAACjB,EAAcK,KAAKS,OAFIC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUC,GAAI,eAJHlB,EAAA,CAEdmB,IAAMpB,WAUtC,OAFqCqB,YAAQ1B,EAAR0B,CAAoCpB,iLCF5DqB,UAZA,SAACR,GACd,OACES,EAAAP,EAAAC,cAAA,OAAKO,UAAU,UACbD,EAAAP,EAAAC,cAAA,OAAKO,UAAU,iBAAiBC,IAAKC,IAAQC,IAAI,kBACjDJ,EAAAP,EAAAC,cAAA,OAAKO,UAAU,6BACbD,EAAAP,EAAAC,cAAA,KAAGO,UAAU,gBAAgBV,EAAMc,MACnCL,EAAAP,EAAAC,cAAA,KAAGO,UAAU,mBAAmBV,EAAMe,aCmCxCC,EAAsBC,YAAU,CAACC,KAAM,wBAAjBD,CApBL,SAACjB,GACtB,OACES,EAAAP,EAAAC,cAAA,QACEO,UAAU,kCACVS,SAAUnB,EAAMoB,cAChBX,EAAAP,EAAAC,cAAA,WACEM,EAAAP,EAAAC,cAACkB,EAAA,EAAD,CACEX,UAAU,wBACVY,UAAWC,IACXT,KAAK,iBACLU,YAAY,wBAGhBf,EAAAP,EAAAC,cAAA,WACEM,EAAAP,EAAAC,cAAA,UAAQO,UAAU,uBAAlB,8DAQOe,EAxCC,SAACzB,GACf,IACI0B,EADQ1B,EAAM2B,YACUC,QAAQC,IAAK,SAAAC,GAAC,OAAIrB,EAAAP,EAAAC,cAAC4B,EAAD,CAAQjB,KAAMgB,EAAEhB,KAAMhB,IAAKgC,EAAEE,GAAIjB,QAASe,EAAEf,QAASiB,GAAIF,EAAEE,OAMzG,OAAKhC,EAAMjB,OAGP0B,EAAAP,EAAAC,cAAA,WAASO,UAAU,WACjBD,EAAAP,EAAAC,cAACa,EAAD,CAAqBG,SARP,SAACc,GACnBjC,EAAMkC,YAAYD,EAAOE,mBAQnBT,GALkBjB,EAAAP,EAAAC,cAACiC,EAAA,EAAD,CAAU/B,GAAI,qCCK3BgC,sBACX9B,YAfoB,SAACzB,GACvB,MAAO,CACL6C,YAAa7C,EAAM6C,cAII,SAACW,GAC1B,MAAO,CACLJ,YAAa,SAACC,GACZG,EAASC,YAAmBJ,QAO9BlD,IAFWoD,CAGbZ","file":"static/js/5.b57ee8a5.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n  isAuth: state.auth.isAuth\r\n});\r\n\r\nexport  const withAuthRedirect = (Component) => {\r\n\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) return <Redirect to={'/login'} />\r\n\r\n      return <Component {...this.props} />\r\n    }\r\n  }\r\n\r\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n  return ConnectedAuthRedirectComponent;\r\n}","import React from 'react';\r\nimport avatar from './../../img/ava.jpg';\r\nimport './Dialog.css';\r\n\r\nconst Dialog = (props) => {\r\n  return (\r\n    <div className='dialog'>\r\n      <img className='dialog__avatar' src={avatar} alt=\"dialog-avatar\"/>\r\n      <div className='dialog__message-container'>\r\n        <p className='dialog__name'>{props.name}</p>\r\n        <p className='dialog__message'>{props.message}</p>\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Dialog;","import React from 'react';\r\nimport './Dialogs.css';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../common/FormsControls/FormsControls\";\r\nimport Dialog from \"./Dialog\";\r\n\r\nconst Dialogs = (props) => {\r\n  let state = props.dialogsPage;\r\n  let dialogsElements = state.dialogs.map( d => <Dialog name={d.name} key={d.id} message={d.message} id={d.id} /> );\r\n\r\n  let addNewMessage = (values) => {\r\n    props.sendMessage(values.newMessageBody);\r\n  };\r\n\r\n  if (!props.isAuth) return <Redirect to={'/login'} />;\r\n\r\n  return (\r\n      <section className=\"dialogs\">\r\n        <AddMessageFormRedux onSubmit={addNewMessage} />\r\n        { dialogsElements }\r\n      </section>\r\n    )\r\n};\r\n\r\nconst AddMessageForm = (props) => {\r\n  return (\r\n    <form\r\n      className='dialog__new-message new-message'\r\n      onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field\r\n          className='new-message__textarea'\r\n          component={Textarea}\r\n          name='newMessageBody'\r\n          placeholder='Enter your message'\r\n        />\r\n      </div>\r\n      <div>\r\n        <button className='new-message__button'>Отправить</button>\r\n      </div>\r\n    </form>\r\n  )\r\n};\r\n\r\nconst AddMessageFormRedux = reduxForm({form: 'dialogAddMessageForm'})(AddMessageForm);\r\n\r\nexport default Dialogs;\r\n","import {connect} from 'react-redux';\r\nimport Dialogs from './Dialogs.jsx'\r\nimport {sendMessageCreator} from '../../redux/dialogs-reducer.js';\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect.js\";\r\nimport {compose} from \"redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    dialogsPage: state.dialogsPage\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    sendMessage: (newMessageBody) => {\r\n      dispatch(sendMessageCreator(newMessageBody));\r\n    }\r\n  }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);\r\n"],"sourceRoot":""}